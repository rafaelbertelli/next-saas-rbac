---
description: 
globs: 
alwaysApply: false
---
---
description: Rule standardization - It is the meta rule to create/edit rules
globs: ["*"]
alwaysApply: true
---

# Rule Standardization Protocol

## Instru√ß√µes para LLM

**A√á√ÉO OBRIGAT√ìRIA**: Quando solicitado para criar ou alterar uma rule, siga EXATAMENTE esta sequ√™ncia:

1. **VERIFICAR**: Confirme se a solicita√ß√£o se enquadra nos crit√©rios da se√ß√£o "Quando Aplicar"
2. **ANALISAR**: Execute an√°lise da rule existente ou requisitos da nova rule
3. **ESTRUTURAR**: Organize seguindo o template estrutural obrigat√≥rio
4. **IMPLEMENTAR**: Aplique todas as se√ß√µes e otimiza√ß√µes definidas
5. **VERIFICAR**: Execute valida√ß√£o de conformidade estrutural
6. **VALIDAR**: Confirme que seguiu todas as diretrizes antes de finalizar

**IMPORTANTE**: Este protocolo garante consist√™ncia e performance otimizada para colabora√ß√£o LLM.

## Fluxo de Desenvolvimento Linear

```
IN√çCIO
  ‚Üì
üìã Consultar [Matriz de Prioridades](mdc:#0-matriz-de-prioridades)
  ‚Üì
üîç Executar [An√°lise da Rule](mdc:#1-an√°lise-da-rule)
  ‚Üì
üõ†Ô∏è Aplicar [Template Estrutural](mdc:#2-template-estrutural) + [Otimiza√ß√µes](mdc:#3-otimiza√ß√µes-obrigat√≥rias)
  ‚Üì
‚öñÔ∏è Conflito? ‚Üí [Resolu√ß√£o de Conflitos](mdc:#resolu√ß√£o-de-conflitos)
  ‚Üì
‚úÖ [Verifica√ß√£o e Valida√ß√£o](mdc:#checklist-de-valida√ß√£o-para-llm)
  ‚Üì
üéØ FINALIZADO
```

## Modo R√°pido (Para ajustes simples)

**Use quando**: Pequenas corre√ß√µes, ajustes de formata√ß√£o, ou mudan√ßas triviais

**Processo simplificado**:
1. ‚úÖ Verificar se √© realmente simples (sem mudan√ßa estrutural)
2. üõ†Ô∏è Aplicar corre√ß√£o mantendo estrutura existente
3. üîç Validar apenas itens "Cr√≠ticos" do checklist
4. ‚úÖ Confirmar que padr√£o estrutural foi mantido

**Pular para casos simples**: Reestrutura√ß√£o completa, an√°lise detalhada, valida√ß√£o extensa

## Quando Aplicar

Esta rule deve ser aplicada quando:
- Solicitado para criar uma nova rule (.mdc)
- Necess√°rio alterar ou reestruturar rule existente
- Requerido padronizar rule que n√£o segue o protocolo
- Preciso garantir consist√™ncia estrutural entre rules

## √çndice de Navega√ß√£o R√°pida

- üö® [Matriz de Prioridades](mdc:#0-matriz-de-prioridades) - **Consulte PRIMEIRO**
- ‚öñÔ∏è [Resolu√ß√£o de Conflitos](mdc:#resolu√ß√£o-de-conflitos) - Para decis√µes dif√≠ceis
- üîç [An√°lise da Rule](mdc:#1-an√°lise-da-rule) - In√≠cio da padroniza√ß√£o
- üõ†Ô∏è [Template Estrutural](mdc:#2-template-estrutural) - Durante implementa√ß√£o
- ‚úÖ [Checklist Final](mdc:#checklist-de-valida√ß√£o-para-llm) - Antes de finalizar

## 0. Matriz de Prioridades

### Cr√≠tico (Bloqueia padroniza√ß√£o)
- Template estrutural aplicado corretamente
- Se√ß√µes obrigat√≥rias presentes
- Checklist simplificado (8-10 itens m√°ximo)
- Navega√ß√£o e cross-references implementados

### Importante (Impacta qualidade)
- Fluxo linear com diagrama visual
- Matriz de prioridades definida
- Resolu√ß√£o de conflitos implementada
- Emojis e formata√ß√£o consistentes

### Opcional (Melhoria incremental)
- Modo r√°pido para casos simples
- Exemplos pr√°ticos contextualizados
- Documenta√ß√£o adicional
- Otimiza√ß√µes espec√≠ficas do dom√≠nio

## Resolu√ß√£o de Conflitos

### Ordem de Preced√™ncia:
1. **Funcionalidade > Padr√µes**: Se um padr√£o impede a funcionalidade, priorize a funcionalidade
2. **Consist√™ncia > Prefer√™ncias**: Mantenha consist√™ncia com outras rules
3. **Performance > Completude**: Prefira estrutura enxuta e eficiente
4. **Clareza > Complexidade**: Simplifique quando poss√≠vel sem perder informa√ß√£o

### Protocolo de Decis√£o:
1. **Identifique o conflito**: Qual diretriz est√° sendo violada?
2. **Consulte a preced√™ncia**: Use a ordem acima para decidir
3. **Documente a exce√ß√£o**: Explique por que divergiu no contexto da rule
4. **Valide o m√≠nimo**: Garanta que itens "Cr√≠ticos" ainda s√£o atendidos

### Exemplos Pr√°ticos:
```markdown
// ‚ùå Conflito: Completude vs Performance
// Dom√≠nio espec√≠fico requer 15+ itens no checklist
// Mas: padr√£o define m√°ximo de 10 itens

// ‚úÖ Resolu√ß√£o: Priorizar performance
// Solu√ß√£o: Agrupar itens relacionados, manter foco em cr√≠ticos
```

### Quando Divergir:
- **Documente**: Adicione justificativa na pr√≥pria rule
- **Valide cr√≠ticos**: Confirme que estrutura base ainda √© seguida
- **Mantenha consist√™ncia**: N√£o quebre padr√£o sem justificativa forte

## Processo de Padroniza√ß√£o

### 1. An√°lise da Rule

**ANTES DE INICIAR**: Consulte a [Matriz de Prioridades](mdc:#0-matriz-de-prioridades)

**EXECUTAR OBRIGATORIAMENTE:**

- **Prop√≥sito**: Identificar objetivo e escopo da rule
- **Estrutura atual**: Analisar organiza√ß√£o existente (se aplic√°vel)
- **Dom√≠nio**: Mapear especificidades do contexto (code review, frontend, testing, etc.)
- **Complexidade**: Avaliar se precisa de modo r√°pido
- **Depend√™ncias**: Verificar rela√ß√£o com outras rules

**A√á√ÉO**: Use `read_file` para analisar rule existente ou requisitos para nova rule.

### 2. Template Estrutural

**A√á√ïES OBRIGAT√ìRIAS:**

Toda rule DEVE seguir esta estrutura exata:

```markdown
---
description: [Descri√ß√£o clara e concisa]
globs: ["padr√£o de arquivos"]
alwaysApply: true
---

# [Nome da Rule]

## Instru√ß√µes para LLM
[5-7 passos numerados com a√ß√µes obrigat√≥rias]

## Fluxo de Desenvolvimento Linear
[Diagrama visual com emojis e navega√ß√£o]

## Modo R√°pido (Para [contexto] simples)
[Apenas se aplic√°vel - code review n√£o tem]

## Quando Aplicar
[4-6 crit√©rios espec√≠ficos]

## √çndice de Navega√ß√£o R√°pida
[5 links estrat√©gicos com emojis]

## 0. Matriz de Prioridades
### Cr√≠tico (Bloqueia [a√ß√£o])
### Importante (Impacta qualidade)
### Opcional (Melhoria incremental)

## Resolu√ß√£o de Conflitos
[Protocolo padr√£o adaptado ao contexto]

## [Se√ß√µes Numeradas Espec√≠ficas do Dom√≠nio]
### 1. [Primeira Se√ß√£o]
### 2. [Segunda Se√ß√£o]
### 3. [Terceira Se√ß√£o]
### 4. [Quarta Se√ß√£o]

## [Se√ß√µes de Conte√∫do Espec√≠fico]
[Diretrizes, padr√µes, exemplos espec√≠ficos do dom√≠nio]

## Checklist de Valida√ß√£o para LLM
### ‚úÖ Cr√≠tico (Bloqueia entrega)
[4-5 itens m√°ximo]

### ‚úÖ Importante (Impacta qualidade)
[4-5 itens m√°ximo]
```

### 3. Otimiza√ß√µes Obrigat√≥rias

**EM CASO DE CONFLITO**: Consulte [Resolu√ß√£o de Conflitos](mdc:#resolu√ß√£o-de-conflitos)

#### **Performance:**
- ‚úÖ **Checklist m√°ximo**: 8-10 itens total (4-5 cr√≠ticos + 4-5 importantes)
- ‚úÖ **Cross-references**: 3-5 links estrat√©gicos m√°ximo
- ‚úÖ **Navega√ß√£o linear**: Eliminar loops potenciais
- ‚úÖ **Foco em cr√≠ticos**: Priorizar itens que bloqueiam execu√ß√£o

#### **Consist√™ncia:**
- ‚úÖ **Emojis padronizados**: üö®üìãüîçüõ†Ô∏è‚öñÔ∏è‚úÖüéØ
- ‚úÖ **Formata√ß√£o uniforme**: Headers, links, code blocks
- ‚úÖ **Terminologia**: Portugu√™s + termos t√©cnicos em ingl√™s
- ‚úÖ **Estrutura de se√ß√µes**: Numera√ß√£o e organiza√ß√£o id√™nticas

#### **Usabilidade:**
- ‚úÖ **√çndice de navega√ß√£o**: Links diretos para se√ß√µes cr√≠ticas
- ‚úÖ **Matriz de prioridades**: Cr√≠tico > Importante > Opcional
- ‚úÖ **Resolu√ß√£o de conflitos**: Protocolo de 4 passos
- ‚úÖ **Modo r√°pido**: Para casos simples (quando aplic√°vel)

### 4. Valida√ß√£o de Conformidade

**EXECUTAR OBRIGATORIAMENTE:**

- **Estrutura**: Verificar se todas as se√ß√µes obrigat√≥rias est√£o presentes
- **Performance**: Confirmar que checklist n√£o excede 10 itens
- **Navega√ß√£o**: Testar se links internos funcionam
- **Consist√™ncia**: Comparar com rules de refer√™ncia
- **Funcionalidade**: Validar se atende ao prop√≥sito espec√≠fico

## Diretrizes de Implementa√ß√£o

### Adapta√ß√£o por Dom√≠nio

**Code Review:**
- Foco em an√°lise sistem√°tica e qualidade
- Sem modo r√°pido (n√£o existe code review r√°pido)
- √änfase em nomenclatura e versionamento

**Frontend Development:**
- Foco em padr√µes de c√≥digo e performance
- Modo r√°pido para ajustes simples
- √änfase em lint e tipos TypeScript

**Testing:**
- Foco em AAA pattern e mocks
- Modo r√°pido para testes triviais
- √änfase em execu√ß√£o e valida√ß√£o

**Implementation Planning:**
- Foco em an√°lise e estrutura√ß√£o
- Modo r√°pido para features pequenas
- √änfase em documenta√ß√£o quando necess√°rio

### Linguagem e Formato

- **Instru√ß√µes**: Sempre em portugu√™s claro e direto
- **Termos t√©cnicos**: Manter em ingl√™s (hooks, components, lint, etc.)
- **Exemplos de c√≥digo**: Sempre em ingl√™s
- **Emojis**: Usar consistentemente para navega√ß√£o visual

### Versionamento de Rules

- **Backup**: Sempre fazer backup antes de altera√ß√µes significativas
- **Hist√≥rico**: Documentar mudan√ßas importantes
- **Teste**: Validar funcionamento ap√≥s altera√ß√µes
- **Rollback**: Manter vers√£o anterior dispon√≠vel se necess√°rio

## Boas Pr√°ticas

### Para Cria√ß√£o de Novas Rules
- Analisar rules existentes como refer√™ncia
- Identificar especificidades do novo dom√≠nio
- Adaptar template mantendo estrutura base
- Focar em itens cr√≠ticos para o dom√≠nio espec√≠fico

### Para Altera√ß√£o de Rules Existentes
- Preservar funcionalidade existente
- Aplicar otimiza√ß√µes gradualmente
- Testar impacto nas atividades do dom√≠nio
- Manter compatibilidade com workflow atual

### Para Manuten√ß√£o do Padr√£o
- Revisar periodicamente conformidade
- Atualizar template se necess√°rio
- Sincronizar mudan√ßas entre rules relacionadas
- Documentar exce√ß√µes justificadas

## Checklist de Valida√ß√£o para LLM

Antes de finalizar a rule, OBRIGATORIAMENTE verificar:
**PRIORIZE**: Itens marcados como "Cr√≠tico" na [Matriz de Prioridades](mdc:#0-matriz-de-prioridades)

### ‚úÖ Cr√≠tico (Bloqueia entrega)
- [ ] Template estrutural aplicado com todas as se√ß√µes obrigat√≥rias
- [ ] Checklist simplificado (m√°ximo 8-10 itens total)
- [ ] Navega√ß√£o e cross-references implementados (3-5 links)
- [ ] Fluxo linear sem loops potenciais

### ‚úÖ Importante (Impacta qualidade)
- [ ] Matriz de prioridades definida (Cr√≠tico/Importante/Opcional)
- [ ] Resolu√ß√£o de conflitos implementada com protocolo
- [ ] Emojis e formata√ß√£o consistentes com outras rules
- [ ] Conte√∫do espec√≠fico do dom√≠nio adequadamente adaptado
- [ ] Modo r√°pido implementado (quando aplic√°vel)

**IMPORTANTE**: N√£o finalize sem completar itens "Cr√≠ticos". Rule deve seguir padr√£o estrutural para garantir performance otimizada do LLM.
